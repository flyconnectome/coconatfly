% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/triple.R
\name{triple_cosine_plot}
\alias{triple_cosine_plot}
\title{Cosine cluster across hemibrain and flywire}
\usage{
triple_cosine_plot(
  x,
  fwtype = x,
  version = NULL,
  ...,
  threshold = 5,
  partners = c("outputs", "inputs"),
  labRow = "{type}_{side}",
  group = "type",
  heatmap = TRUE,
  interactive = FALSE,
  nas = c("zero", "drop"),
  method = c("ward.D", "single", "complete", "average", "mcquitty", "median", "centroid",
    "ward.D2")
)
}
\arguments{
\item{x}{Hemibrain ids or a dataframe generated by
\code{triple_connection_table}}

\item{fwtype}{Optional flywire ids interpreted by \code{flywire_ids} function}

\item{version}{Connectome data dump version. See
\code{\link{flywire_connectome_data_version}} for details.}

\item{...}{Additional arguments to heatmap}

\item{threshold}{Minimum connection weight to be included when finding
partners}

\item{partners}{Whether to use output or input partners for clustering.
Default now uses both.}

\item{labRow}{A character vector defining labels for the rows of the
resultant heatmap}

\item{group}{What column to use for grouping partners.}

\item{heatmap}{A logical indicating whether or not to plot the heatmap
\emph{OR} a function to plot the heatmap whose argument names are
compatible with \code{stats::\link{heatmap}}. \code{gplots::heatmap.2} is a
good example.}

\item{interactive}{When \code{TRUE} returns a shiny-based interactive heatmap}

\item{nas}{What to do with rows/columns with NAs when computing cosine
matrix. Dropping may be more mathematically satisfactory but eliminates
neurons from the comparison, so the default is to set NA elements to do 0
similarity.}

\item{method}{the clustering method. See \code{\link{hclust}} for details.}
}
\value{
A list as returned by \code{\link{heatmap}}
}
\description{
Cosine cluster across hemibrain and flywire
}
\details{
Note that for bilateral neurons it may work better to use either
  input partners or output partners but not both.
}
\examples{
\donttest{
# AOTU063 should be separated into two subtypes.
# Very clear based on output clustering and also some small morphological differences.
triple_cosine_plot('AOTU063', partners = 'o')

# LAL074/LAL084 are the same type.
# Were incorrectly split due to annotation into separate hemibrain CBFs
# note that the compound type 'LAL074,LAL084' will be used to find flywire
# neurons but expanded to the regex "(LAL074|LAL084)" in order to find
# both hemibrain types
triple_cosine_plot('LAL074,LAL084', partners = 'i')
}
}
